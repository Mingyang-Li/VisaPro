/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApplicantUpdateManyWithoutUsersInput } from "./ApplicantUpdateManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { EducationHistoryUpdateManyWithoutUsersInput } from "./EducationHistoryUpdateManyWithoutUsersInput";
import { EmploymentHistoryUpdateManyWithoutUsersInput } from "./EmploymentHistoryUpdateManyWithoutUsersInput";
import { FamilyMemberUpdateManyWithoutUsersInput } from "./FamilyMemberUpdateManyWithoutUsersInput";
import { PersonalInfoUpdateManyWithoutUsersInput } from "./PersonalInfoUpdateManyWithoutUsersInput";
import { TravelHistoryUpdateManyWithoutUsersInput } from "./TravelHistoryUpdateManyWithoutUsersInput";
@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ApplicantUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicantUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicantUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applicants?: ApplicantUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ApplicantUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicantUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicantUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applicantsArchived?: ApplicantUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ApplicantUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicantUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicantUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applicantsCreated?: ApplicantUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ApplicantUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicantUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicantUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applicantsUpdated?: ApplicantUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  educationHistoriesArchived?: EducationHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  educationHistoriesCreated?: EducationHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  educationHistoriesUpdated?: EducationHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EmploymentHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  employmentHistoriesArchived?: EmploymentHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EmploymentHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  employmentHistoriesCreated?: EmploymentHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EmploymentHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  employmentHistoriesUpdated?: EmploymentHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FamilyMemberUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  familyMembersArchived?: FamilyMemberUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FamilyMemberUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  familyMembersCreated?: FamilyMemberUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FamilyMemberUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  familyMembersUpdated?: FamilyMemberUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PersonalInfoUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  personalInfosArchived?: PersonalInfoUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PersonalInfoUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  personalInfosCreated?: PersonalInfoUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PersonalInfoUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  personalInfosUpdated?: PersonalInfoUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: [String],
  })
  @IsString({
    each: true,
  })
  @IsOptional()
  @Field(() => [String], {
    nullable: true,
  })
  roles?: Array<string>;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TravelHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TravelHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  travelHistoriesArchived?: TravelHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TravelHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TravelHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  travelHistoriesCreated?: TravelHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TravelHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TravelHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  travelHistoriesUpdated?: TravelHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}
export { UserUpdateInput };

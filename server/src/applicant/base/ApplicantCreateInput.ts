/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsBoolean, IsOptional, IsDate, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EducationHistoryCreateNestedManyWithoutApplicantsInput } from "./EducationHistoryCreateNestedManyWithoutApplicantsInput";
import { EmploymentHistoryCreateNestedManyWithoutApplicantsInput } from "./EmploymentHistoryCreateNestedManyWithoutApplicantsInput";
import { FamilyMemberCreateNestedManyWithoutApplicantsInput } from "./FamilyMemberCreateNestedManyWithoutApplicantsInput";
import { PersonalInfoWhereUniqueInput } from "../../personalInfo/base/PersonalInfoWhereUniqueInput";
import { TravelHistoryCreateNestedManyWithoutApplicantsInput } from "./TravelHistoryCreateNestedManyWithoutApplicantsInput";
import { UserCreateNestedManyWithoutApplicantsInput } from "./UserCreateNestedManyWithoutApplicantsInput";
@InputType()
class ApplicantCreateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  archived?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  archivedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  archivedBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  createdBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryCreateNestedManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => EducationHistoryCreateNestedManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => EducationHistoryCreateNestedManyWithoutApplicantsInput, {
    nullable: true,
  })
  educationHistories?: EducationHistoryCreateNestedManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryCreateNestedManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryCreateNestedManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => EmploymentHistoryCreateNestedManyWithoutApplicantsInput, {
    nullable: true,
  })
  employmentHistories?: EmploymentHistoryCreateNestedManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberCreateNestedManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberCreateNestedManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => FamilyMemberCreateNestedManyWithoutApplicantsInput, {
    nullable: true,
  })
  familyMembers?: FamilyMemberCreateNestedManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoWhereUniqueInput)
  @IsOptional()
  @Field(() => PersonalInfoWhereUniqueInput, {
    nullable: true,
  })
  personalInfo?: PersonalInfoWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryCreateNestedManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => TravelHistoryCreateNestedManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => TravelHistoryCreateNestedManyWithoutApplicantsInput, {
    nullable: true,
  })
  travelHistories?: TravelHistoryCreateNestedManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutApplicantsInput, {
    nullable: true,
  })
  updatedBy?: UserCreateNestedManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}
export { ApplicantCreateInput };

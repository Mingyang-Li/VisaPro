/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsBoolean, IsOptional, IsDate, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EducationHistoryUpdateManyWithoutApplicantsInput } from "./EducationHistoryUpdateManyWithoutApplicantsInput";
import { EmploymentHistoryUpdateManyWithoutApplicantsInput } from "./EmploymentHistoryUpdateManyWithoutApplicantsInput";
import { FamilyMemberUpdateManyWithoutApplicantsInput } from "./FamilyMemberUpdateManyWithoutApplicantsInput";
import { PersonalInfoWhereUniqueInput } from "../../personalInfo/base/PersonalInfoWhereUniqueInput";
import { TravelHistoryUpdateManyWithoutApplicantsInput } from "./TravelHistoryUpdateManyWithoutApplicantsInput";
@InputType()
class ApplicantUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  archived?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  archivedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  archivedBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  createdBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryUpdateManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => EducationHistoryUpdateManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => EducationHistoryUpdateManyWithoutApplicantsInput, {
    nullable: true,
  })
  educationHistories?: EducationHistoryUpdateManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryUpdateManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryUpdateManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => EmploymentHistoryUpdateManyWithoutApplicantsInput, {
    nullable: true,
  })
  employmentHistories?: EmploymentHistoryUpdateManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberUpdateManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberUpdateManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => FamilyMemberUpdateManyWithoutApplicantsInput, {
    nullable: true,
  })
  familyMembers?: FamilyMemberUpdateManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoWhereUniqueInput)
  @IsOptional()
  @Field(() => PersonalInfoWhereUniqueInput, {
    nullable: true,
  })
  personalInfo?: PersonalInfoWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryUpdateManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => TravelHistoryUpdateManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => TravelHistoryUpdateManyWithoutApplicantsInput, {
    nullable: true,
  })
  travelHistories?: TravelHistoryUpdateManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  updatedBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}
export { ApplicantUpdateInput };

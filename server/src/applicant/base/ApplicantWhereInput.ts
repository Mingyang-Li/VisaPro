/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EducationHistoryListRelationFilter } from "../../educationHistory/base/EducationHistoryListRelationFilter";
import { EmploymentHistoryListRelationFilter } from "../../employmentHistory/base/EmploymentHistoryListRelationFilter";
import { FamilyMemberListRelationFilter } from "../../familyMember/base/FamilyMemberListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { PersonalInfoWhereUniqueInput } from "../../personalInfo/base/PersonalInfoWhereUniqueInput";
import { TravelHistoryListRelationFilter } from "../../travelHistory/base/TravelHistoryListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
@InputType()
class ApplicantWhereInput {
  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  archived?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  archivedAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  archivedBy?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  createdBy?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EducationHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationHistoryListRelationFilter)
  @IsOptional()
  @Field(() => EducationHistoryListRelationFilter, {
    nullable: true,
  })
  educationHistories?: EducationHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmploymentHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmploymentHistoryListRelationFilter)
  @IsOptional()
  @Field(() => EmploymentHistoryListRelationFilter, {
    nullable: true,
  })
  employmentHistories?: EmploymentHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FamilyMemberListRelationFilter)
  @IsOptional()
  @Field(() => FamilyMemberListRelationFilter, {
    nullable: true,
  })
  familyMembers?: FamilyMemberListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PersonalInfoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PersonalInfoWhereUniqueInput)
  @IsOptional()
  @Field(() => PersonalInfoWhereUniqueInput, {
    nullable: true,
  })
  personalInfo?: PersonalInfoWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TravelHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TravelHistoryListRelationFilter)
  @IsOptional()
  @Field(() => TravelHistoryListRelationFilter, {
    nullable: true,
  })
  travelHistories?: TravelHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  updatedBy?: UserListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}
export { ApplicantWhereInput };
